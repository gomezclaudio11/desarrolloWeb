/*
SASS
Syntactically Awesome Stlysheets
Es un preprocesador de CSS que te permite escribir un codigo 
el cual luego se compila en un archivo de CSS puro
Codigo mas limpio usando lenguaje de estilos
1- istala nodejs
2- istala npm
3- Ingresa al directorio del repositorio
4- inicia npm con npm init
5- instala nodemon: npm install -D node-sass nodemon
6- crea la carpeta SCSS y CSS y sus archivos
7- Edita el package.json: script: "build-css 
8- compila con npm: npm run watch-css

Uso del &
Es un selector especial inventado x SASS 
Se usa en selectores anidados para referirse al selector externo

IMPORT
Una de las caracteristicas mas utiles de SASS es la posibilidad
de separar tus hojas de estilo en archivos separados
Luego usa import para incluir la fuente de tus archivos individuales
en una hoa de estilo maestra
@import "estructura";
@import "colores";

el archivo debe tener "_" al principio del nombre _colores.scss

VARS (variables)
Son una manera de guardar info que necesites reutilizar en tus hojas de estilos
SASS utyiliza el signo dolar $ al principio de la palabra clave para crear una variable
Las variables se definen al principio para que sean globales

OPERACIONES
Con SASS puedes realizar operaciones matematicas basicas
width: $ancho/2

CONDICIONALES
Permite establecer reglas para validar si se aplica o no una accion
IF
Si se cumple la condicion se ejecutara la generacion del bloque asignado

BUCLES
Un bucle es una secuencia qie repite mas de una vez una porcion
de codigo dada cierta condicion
cuando deja de cumplirse el bucle finaliza
for: Es una secuencia q repite mas de una vez una porcion de codigo
    dada cierta condicion.
    Cuando la misma deja de cumplirse el bucle finaliza
    
   
each: Facilita la emision de estilos o la evaluacion del codigo
    para cada elemento de una lista
    Ideal para estilos repetitivos que solo tienen algunas variaciones
    entre ellosa ya que, de cumplirse una caracteristica
    realiza dicha accion

maps: Son variables cuyo valor es una coleccion de variables.
    las cadenas suelen ser cadenas o numeros
    los valores cualquier tipo de dato

extend: Al dise√±ar una pagina una clase debe tener todos los estilos de otra clase
        asi como sus propios estilos especificos
        En estos casos usamos @extend para traer los estilos de otra clase

mixins: Te permiten definir estilos que pueden ser reutilizados en tu proyecto
    Pueden recibir argumentos(diferencia con extend)
*/

@import "button"; 
@import "config"; 


@function size ($value){
    @return $value * $unit
}

@mixin reset-pm {
    padding: 0;
    margin: 0;
}


*{
    @include reset-pm();
    box-sizing: border-box;
}

body{
    background-color:  $primary-color;
    font-family: Arial, Helvetica, sans-serif;
}

a{
    color: $secondary-color;
    text-decoration: none;
}

h2 {
    font-weight: bolder;
    font-size: size(6);
}

h3{
    font-weight: lighter;
    font-size: size(3);
}

.container {
    background-color: white;
    margin: 100px auto;
    width: 900px;
    padding: 50px;
    box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);

    background-image: url(/13SASS/img/bg.jpg);
    background-size: 100% 100%;
}

ul{
    @include reset-pm();
    list-style: none;
    display: flex;
    gap: 20px;
    li{
        a{
            @include btn($background-color: $terciary-color, 
                        $color: $font-color, 
                        $bold: "true" );
            &:hover{
                @include btn ( $secondary-color, $terciary-color, "false");
                box-shadow: $box-shadow;
            }
                    
        }
    }
}

header {
    nav{
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
}

.prices{
    .prev{
        font-size: size(2);
        font-weight: bolder;
        color: $font-color;
        text-decoration: line-through;
    }
    .now{
        font-size: size(5);
        font-weight: bolder;
    }
}

.row{
    display: flex;
    align-items: center;
    .col{
        width: 50%;
    }
    .col-30{
        width: 30%;
    }
    .col-70{
        width: 70%;
    }
}

.m-auto{
    margin: 0 auto;
}

@for $i from 1 to $limit{
    .m-#{$i} {
        margin: $i * $unit;
    }
}
@for $i from 1 to $limit{
    .p-#{$i} {
        padding: $i * $unit;
    }
}
@for $i from 1 to $limit{
    .py-#{$i}{
        padding: $i *$unit 0;
    }
}

@for $i from 1 to 4 {
    .w-#{$i}{
        width: $i * 25%;
    }
}
